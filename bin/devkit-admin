#!/usr/bin/env node

'use strict';

/**
 * This file is useful for not having to load bootstrap-local in various javascript.
 * Simply use package.json to have npm scripts that use this script as well, or use
 * this script directly.
 */
require('../lib/bootstrap-local');

// todo
const path=require('path');
// todo

process.chdir(path.join(__dirname,'..'));

// This might get awkward, so we fallback to console if there was an error.
let logger=null;
try{
    logger = new (require('@angular-devkit/core').logging.IndentLogger)('root');
    const {bold,gray,red,yellow,white}=require('@angular-devkit/core').terminal;
    const filter=require('rxjs/operators').filter;
    logger
        .pipe(filter(entry=>(entry.level!=="debug"||args.verbose)))
        .subscribe(entry=>{
            let color=gray;
            let output=process.stdout;
            switch(entry.level){
                case 'info': color=white;break;
                case 'warn': color=yellow;break;
                case 'error': color=red;output=process.stderr;break;
                case 'fatal': color=x=>bold(red(x)); output=process.stderr;break;
            }
            output.write(color(entry.message)+'\n');
        });
    
    // todo
} catch(err){
    console.error(`Reverting to manual console logging.\nReason: ${err.message}.`);
    logger={
        debug: console.log.bind(console),
        info: console.log.bind(console),
        warn: console.warn.bind(console),
        error: console.error.bind(console),
        fata: x=>{ console.error(x);process.exit(100); },
        createChild:()=>looger,
    };
}

try {
    // todo
} catch(err){
    // todo
}

